{"version":3,"file":"js/0-ecf68bc2c6297c904d98.chunk.js","sources":["webpack:///./app/javascript/components/common/Button/Button.css?3f6c","webpack:///./app/javascript/components/common/Button/index.js","webpack:///./app/javascript/constants/apiEndPoint.js","webpack:///./app/javascript/services/game.service.js","webpack:///./app/javascript/store/actions/game.action.js","webpack:///./app/javascript/store/actions/index.js","webpack:///./app/javascript/store/types.js","webpack:///./app/javascript/components/common/Button/Button.css"],"sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!./Button.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = props => {\n  const { handleSubmit, label, extraClass } = props;\n\n  let btnClass = \" button \";\n  if (extraClass) {\n    btnClass += extraClass;\n  }\n  return (\n    <button className={btnClass} onClick={handleSubmit}>\n      {label}\n    </button>\n  );\n};\n\n\nexport default Button;\n","export default {\n\n    GAMES : {\n        INIT: GenerateApiUrl('games'),\n        NEW_GAME: GenerateApiUrl('games/new'),\n        EVALUATE: GenerateApiUrl('games/evaluate')\n    },\n}\n\nfunction GenerateApiUrl(postUrl) {\n    return '/v1/' + postUrl;\n}","import APIEndPoint from \"../constants/apiEndPoint\";\nimport { ST_USER_INFO } from \"../constants/storageItems\";\n\nexport const gameService = {\n  initGame,\n  evaluateWord,\n  backToHome\n};\n\nfunction evaluateWord(data) {\n\n  let param = '?word=' + data.word;\n\n  return fetch(APIEndPoint.GAMES.EVALUATE + param)\n    .then(response => {\n      return response.json();\n    })\n    .then(response => {\n      if (response && response.success && response.data) {\n\n        var responsePackage = {\n          ...response,\n          word: data.word,\n        };\n        return responsePackage;\n\n      } else {\n        return response;\n      }\n    })\n    .catch(error => { return { success: false, message: error }; });\n\n}\n\nfunction initGame(data) {\n\n  let param = '?length=' + data.boardSize;\n  return fetch(APIEndPoint.GAMES.NEW_GAME + param)\n    .then(response => {\n      return response.json();\n    })\n    .then(response => {\n      if (response && response.success && response.data && response.data.board_data) {\n\n        var responsePackage = {\n          ...response,\n          userName: data.userName,\n          stageID: data.stageID,\n          boardSize: data.boardSize,\n        };\n\n\n        localStorage.setItem(ST_USER_INFO, JSON.stringify(responsePackage));\n        return responsePackage;\n\n      } else {\n        return response;\n      }\n\n    })\n    .catch(error => { return { success: false, message: error }; });\n\n}\n\nfunction handleResponse(response) {\n  if (!response.ok) {\n    return Promise.reject(response.statusText);\n  }\n\n  return response.json();\n}\n\nfunction backToHome() {\n  localStorage.removeItem(ST_USER_INFO);\n}\n","import {\n  NEW_GAME_INIT,\n  NEW_GAME_SUCCESS,\n  NEW_GAME_FAILURE,\n  CLEAR_GAME,\n  EVALUATION_INIT,\n  EVALUATION_SUCCESS,\n  EVALUATION_INCORRECT,\n  EVALUATION_FAILURE,\n  BACK_TO_HOME\n} from \"../types\";\n\nimport { MessageType, InGameMessageType } from \"../../constants/messageType.js\";\n\nimport { showMessage, GenerateMessage } from \"../../helpers\";\n\nimport { gameService } from \"../../services/game.service\";\n\nimport { ROUTE_STAGE1 } from \"../../constants/routeNames\";\n\nexport const gameAction = {\n  initNewGame,\n  evaluateWord,\n  clearGame,\n  backToHome\n};\n\nfunction clearGame() {\n  return dispatch => {\n    dispatch(request());\n    gameService.backToHome();\n  }\n\n  function request() {\n    return { type: CLEAR_GAME };\n  }\n\n}\n\nfunction evaluateWord(gameObj = {\n  word: ''\n}, onSuccess, onFailure) {\n  return dispatch => {\n\n    dispatch(request({ word: gameObj.word }));\n\n    // MAKE A CALL TO THE API\n    gameService\n      .evaluateWord(gameObj)\n      .then(response => {\n\n        if (response) {\n\n          if (response.success) {\n\n            if (response.data && response.data.is_correct) {\n\n              dispatch(success(response)); // <-- SUCCESS ACTION\n              showMessage(MessageType.SUCCESS, GenerateMessage(InGameMessageType.SUCCESS, ''));\n\n            } else {\n              dispatch(incorrect(response)); // <-- SUCCESS ACTION\n              showMessage(MessageType.ERROR, GenerateMessage(InGameMessageType.ERROR, ''));\n            }\n\n            if (onSuccess) onSuccess();\n\n\n          } else {\n            dispatch(failure(response.message)); // <-- FAILURE ACTION\n            showMessage(MessageType.ERROR, response.message);\n          }\n        } else {\n          let msg = 'Something went wrong.'\n          dispatch(failure(msg)); // <-- FAILURE ACTION\n          showMessage(MessageType.ERROR, msg);\n        }\n\n      }, error => {\n        dispatch(failure(error)); // <-- FAILURE ACTION\n        showMessage(MessageType.ERROR, error);\n\n      });\n\n  };\n\n  function request(response) {\n    return { type: EVALUATION_INIT, response };\n  }\n  function success(response) {\n    return { type: EVALUATION_SUCCESS, response };\n  }\n  function incorrect(error) {\n    return { type: EVALUATION_INCORRECT, error };\n  }\n  function failure(error) {\n    return { type: EVALUATION_FAILURE, error };\n  }\n\n}\n\nfunction initNewGame(initGameObj = {\n  userName: '',\n  stageID: 0\n}, history) {\n  return dispatch => {\n\n\n    // REQUEST ACTION -- >\n    dispatch(request({\n      userName: initGameObj.userName,\n      stageID: initGameObj.stageID\n    }));\n\n    // MAKE A REQUEST TO THE API -->\n    gameService\n      .initGame(initGameObj)\n      .then(response => {\n\n        if (response) {\n\n          if (response.success) {\n\n            dispatch(success(response)); // <-- SUCCESS ACTION\n            history.push(ROUTE_STAGE1);\n\n            showMessage(MessageType.SUCCESS, GenerateMessage(InGameMessageType.GREETING, response.userName));\n\n          } else {\n\n            dispatch(failure(response.message)); // <-- FAILURE ACTION\n\n            showMessage(MessageType.ERROR, response.message);\n          }\n        } else {\n\n          let msg = 'Something went wrong.';\n          dispatch(failure(msg)); // <-- FAILURE ACTION\n          showMessage(MessageType.ERROR, msg);\n\n        }\n\n      }, error => {\n        dispatch(failure(error)); // <-- FAILURE ACTION\n        showMessage(MessageType.ERROR, error);\n      });\n  };\n\n  function request(user) {\n    return { type: NEW_GAME_INIT, user };\n  }\n  function success(user) {\n    return { type: NEW_GAME_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: NEW_GAME_FAILURE, error };\n  }\n}\n\nfunction backToHome() {\n  gameService.backToHome();\n  return { type: BACK_TO_HOME };\n}\n","\nexport * from './game.action';\n","\n\n\nexport const CLEAR_GAME = \"CLEAR_GAME\";\n\nexport const EVALUATION_INIT = \"EVALUATION_INIT\";\nexport const EVALUATION_SUCCESS = \"EVALUATION_SUCCESS\";\nexport const EVALUATION_INCORRECT = \"EVALUATION_INCORRECT\";\n\nexport const EVALUATION_FAILURE = \"EVALUATION_FAILURE\";\n\n\n\n\nexport const NEW_GAME_INIT = \"NEW_GAME_INIT\";\nexport const NEW_GAME_SUCCESS = \"NEW_GAME_SUCCESS\";\n\nexport const NEW_GAME_FAILURE = \"NEW_GAME_FAILURE\";\n\nexport const BACK_TO_HOME = \"BACK_TO_HOME\";\n\nexport const ALERT_ACTION = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR',\n    INFO: 'ALERT_INFO',\n    WARNING: 'ALERT_WARNING',\n    DEFAULT: 'ALERT_DEFAULT'\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"/* Button States */\\n.button {\\n  width: 100%;\\n  border-radius: 5px;\\n  background-color: #ff9800;\\n  margin-top: 25px;\\n  padding: 20px 0; /* Safari */\\n  transition: background 0.5s;\\n  box-shadow: 2px 2px 5px rgba(255, 204, 128, 0.25);\\n  display: block;\\n  border: none;\\n  font-size: 15px;\\n  font-weight: 600;\\n  text-align: center;\\n  color: #ffffff;\\n  letter-spacing: 3px;\\n}\\n.button:hover {\\n  background: #ef6c00;\\n  cursor: pointer;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"Button.css\"],\"names\":[],\"mappings\":\"AAAA,kBAAkB;AAClB;EACE,WAAW;EACX,kBAAkB;EAClB,yBAAyB;EACzB,gBAAgB;EAChB,eAAe,EACsB,WAAW;EAChD,2BAA2B;EAC3B,iDAAiD;EACjD,cAAc;EACd,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,cAAc;EACd,mBAAmB;AACrB;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB\",\"file\":\"Button.css\",\"sourcesContent\":[\"/* Button States */\\n.button {\\n  width: 100%;\\n  border-radius: 5px;\\n  background-color: #ff9800;\\n  margin-top: 25px;\\n  padding: 20px 0;\\n  -webkit-transition: background 0.5s; /* Safari */\\n  transition: background 0.5s;\\n  box-shadow: 2px 2px 5px rgba(255, 204, 128, 0.25);\\n  display: block;\\n  border: none;\\n  font-size: 15px;\\n  font-weight: 600;\\n  text-align: center;\\n  color: #ffffff;\\n  letter-spacing: 3px;\\n}\\n\\n.button:hover {\\n  background: #ef6c00;\\n  cursor: pointer;\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;;;;;;;;;;;;AClBA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAFA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AADA;AADA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAIA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAFA;AACA;AAFA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAKA;AAIA;AAEA;AAEA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACjKA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}